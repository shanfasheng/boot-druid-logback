spring:
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/psm?characterEncoding=utf8&serverTimezone=Asia/Shanghai
      username: root
      password: root
      # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 5
      # 最小连接池数量
      min-idle: 5
      # 最大连接池数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 6000
      # useUnfairLock属性为true使用非公平锁
      use-unfair-lock: true
      # 有两个含义：
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 'X'
      # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 6000
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # ????preparedStatement???????PSCache??PSCache??????????????????????????????oracle????mysql????????
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: 1
      # 等价于上面的max-pool-prepared-statement-per-connection-size
      max-open-prepared-statements: 1
      filter: stat, wall, log4j
      web-stat-filter:
        enabled: true
        url-pattern: /*
        # exclusions: *.js, *.gif, *.jpg, *.bmp, *.png, *.css, *.ico, /druid/*
        session-stat-max-count: 1000
        session-stat-enable: false
        # 配置principalSessionName，使得druid能够知道当前的session的用户是谁
        # 如果你session中保存的是非string类型的对象，需要重载toString方法
        principal-session-name: xxx.user
        profile-enable: false
      stat-view-servlet:
        enabled: true
        reset-enable: false
        login-password: druid
        login-username: druid
        url-pattern: /druid/*